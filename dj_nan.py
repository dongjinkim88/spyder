#!/usr/bin/env python3# -*- coding: utf-8 -*-"""Created on Sat Feb 19 12:01:55 2022@author: djkim"""import pandas as pdimport numpy as np# NaN is short for Not a numberarr = np.array([1, np.nan, 3, 4, 5, 6, np.nan]) print(arr)print(arr.max())print(np.max(arr))print(np.nanmax(arr))np.isnan(arr)a = np.nanb = np.nanprint(a==b)print(a is b)"""The reason for this is that == operator compares the values of both the operands and checks for value equality. is operator, on the other hand, checks whether both the operands refer to the same object or not."""s = pd.DataFrame([(0.0, np.nan, -2.0, 2.0),(np.nan, 2.0, np.nan, 1),(2.0, 5.0, np.nan, 9.0),(np.nan, 4.0, -3.0, 16.0)],columns=list('abcd'))s# s.isnull()# s.fillna(0)values = {'a': 10, 'b': 20, 'c': 30, 'd': 40}s.fillna(value=values)s = pd.DataFrame([(0.0, 1.0, -2.0, 2.0),(np.nan, 2.0, np.nan, 1),(2.0, 5.0, np.nan, 9.0),(3.0, 4.0, -3.0, 16.0)],columns=list('abcd'))s# to drop rows with NaNs uses.dropna(inplace=True)# to drop columns with NaNs uses.dropna(axis=1, inplace=True)